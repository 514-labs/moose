//! Template for generating data models
//!
//! We only generate a static base model for now. We'll add dynamic templates with tinytemplates in the future

pub static BASE_MODEL_TEMPLATE: &str = r#"
// This file was auto-generated by the framework. You can add data models or change the existing ones

model UserActivity {
    eventId   String @id
    timestamp DateTime
    userId    String
    activity  String
}

model ParsedActivity {
    eventId   String @id
    timestamp DateTime
    userId    String
    activity  String
}

"#;

pub static BASE_FLOW_SAMPLE_TEMPLATE: &str = r#"
// Example flow function: Converts local timestamps in UserActivity data to UTC.

// Imports: Source (UserActivity) and Destination (ParsedActivity) data models.
import { ParsedActivity } from "../../../../.moose/{{project_name}}-sdk/ParsedActivity.ts";
import { UserActivity } from "../../../../.moose/{{project_name}}-sdk/UserActivity.ts";

// The 'run' function transforms UserActivity data to ParsedActivity format.
// For more details on how Moose flows work, see: https://docs.moosejs.com
export default function run(event: UserActivity): ParsedActivity {
  // Convert local timestamp to UTC and return new ParsedActivity object.
  return {
    eventId: event.eventId,  // Retain original event ID.
    userId: "puid" + event.userId,  // Example: Prefix user ID.
    activity: event.activity,  // Copy activity unchanged.
    timestamp: new Date(event.timestamp.toUTCString())  // Convert timestamp to UTC.
  };
}

"#;

pub static BASE_FLOW_TEMPLATE: &str = r#"
// Add your models & start the development server to import these types
import { {{source}} } from "../../../../.moose/{{project_name}}-sdk/{{source}}.ts";
import { {{destination}} } from "../../../../.moose/{{project_name}}-sdk/{{destination}}.ts";

// The 'run' function transforms {{source}} data to {{destination}} format.
// For more details on how Moose flows work, see: https://docs.moosejs.com
export default function run(event: {{source}}): {{destination}} | null {
  return null;
}

"#;
