# This file was auto-generated by the framework. You can add data models or change the existing ones

from moose_lib import Key, IngestPipeline, IngestPipelineConfig, StringToEnumMixin
from datetime import datetime
from typing import Optional, Annotated, Any
from pydantic import BaseModel, BeforeValidator
from enum import IntEnum, auto



class Baz(StringToEnumMixin, IntEnum):
    QUX = auto()
    QUUX = auto()

class Foo(BaseModel):
    id: Key[str]
    timestamp: float
    message: str
    category: Optional[str] = None
    priority: Optional[int] = None

class FooV1(BaseModel):
    primary_key: Key[str]
    timestamp: float
    baz: Baz
    optional_text: Optional[str] = None

class Bar(BaseModel):
    primary_key: Key[str]
    utc_timestamp: datetime
    baz: Baz
    has_text: bool
    text_length: int

fooModel = IngestPipeline[Foo]("Foo", IngestPipelineConfig(
    ingest=True,
    stream=True,
    table=True,
))

# Versioned ingest API v1 for Foo data
fooModelV1 = IngestPipeline[FooV1]("Foo", IngestPipelineConfig(
    ingest=True,
    stream=True,
    table=False,
    dead_letter_queue=True,
    version="1",  # Version string for schema versioning
))


barModel = IngestPipeline[Bar]("Bar", IngestPipelineConfig(
    ingest=False,
    stream=True,
    table=True,
    dead_letter_queue=True
))
