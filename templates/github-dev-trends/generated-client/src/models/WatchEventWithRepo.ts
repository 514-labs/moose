/* tslint:disable */
/* eslint-disable */
/**
 * live-dev-trends API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface WatchEventWithRepo
 */
export interface WatchEventWithRepo {
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  createdAt: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoDescription?: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOwnerAvatarUrl?: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoName: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoOpenIssues?: number;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoForks?: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOwnerType?: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoWatchers?: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoUrl: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoLanguage?: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOwnerUrl?: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoOwnerId?: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOrgUrl?: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  actorId: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  actorAvatarUrl: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  actorUrl: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoId: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  actorLogin: string;
  /**
   *
   * @type {Array<string>}
   * @memberof WatchEventWithRepo
   */
  repoTopics?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOwnerLogin?: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoStars?: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoCreatedAt?: string;
  /**
   *
   * @type {number}
   * @memberof WatchEventWithRepo
   */
  repoOrgId?: number;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoOrgLogin?: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  repoHomepage?: string;
  /**
   *
   * @type {string}
   * @memberof WatchEventWithRepo
   */
  eventId: string;
}

/**
 * Check if a given object implements the WatchEventWithRepo interface.
 */
export function instanceOfWatchEventWithRepo(
  value: object,
): value is WatchEventWithRepo {
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("repoName" in value) || value["repoName"] === undefined) return false;
  if (!("repoUrl" in value) || value["repoUrl"] === undefined) return false;
  if (!("actorId" in value) || value["actorId"] === undefined) return false;
  if (!("actorAvatarUrl" in value) || value["actorAvatarUrl"] === undefined)
    return false;
  if (!("actorUrl" in value) || value["actorUrl"] === undefined) return false;
  if (!("repoId" in value) || value["repoId"] === undefined) return false;
  if (!("actorLogin" in value) || value["actorLogin"] === undefined)
    return false;
  if (!("eventId" in value) || value["eventId"] === undefined) return false;
  return true;
}

export function WatchEventWithRepoFromJSON(json: any): WatchEventWithRepo {
  return WatchEventWithRepoFromJSONTyped(json, false);
}

export function WatchEventWithRepoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WatchEventWithRepo {
  if (json == null) {
    return json;
  }
  return {
    createdAt: json["createdAt"],
    repoDescription:
      json["repoDescription"] == null ? undefined : json["repoDescription"],
    repoOwnerAvatarUrl:
      json["repoOwnerAvatarUrl"] == null ?
        undefined
      : json["repoOwnerAvatarUrl"],
    repoName: json["repoName"],
    repoOpenIssues:
      json["repoOpenIssues"] == null ? undefined : json["repoOpenIssues"],
    repoForks: json["repoForks"] == null ? undefined : json["repoForks"],
    repoOwnerType:
      json["repoOwnerType"] == null ? undefined : json["repoOwnerType"],
    repoWatchers:
      json["repoWatchers"] == null ? undefined : json["repoWatchers"],
    repoUrl: json["repoUrl"],
    repoLanguage:
      json["repoLanguage"] == null ? undefined : json["repoLanguage"],
    repoOwnerUrl:
      json["repoOwnerUrl"] == null ? undefined : json["repoOwnerUrl"],
    repoOwnerId: json["repoOwnerId"] == null ? undefined : json["repoOwnerId"],
    repoOrgUrl: json["repoOrgUrl"] == null ? undefined : json["repoOrgUrl"],
    actorId: json["actorId"],
    actorAvatarUrl: json["actorAvatarUrl"],
    actorUrl: json["actorUrl"],
    repoId: json["repoId"],
    actorLogin: json["actorLogin"],
    repoTopics: json["repoTopics"] == null ? undefined : json["repoTopics"],
    repoOwnerLogin:
      json["repoOwnerLogin"] == null ? undefined : json["repoOwnerLogin"],
    repoStars: json["repoStars"] == null ? undefined : json["repoStars"],
    repoCreatedAt:
      json["repoCreatedAt"] == null ? undefined : json["repoCreatedAt"],
    repoOrgId: json["repoOrgId"] == null ? undefined : json["repoOrgId"],
    repoOrgLogin:
      json["repoOrgLogin"] == null ? undefined : json["repoOrgLogin"],
    repoHomepage:
      json["repoHomepage"] == null ? undefined : json["repoHomepage"],
    eventId: json["eventId"],
  };
}

export function WatchEventWithRepoToJSON(json: any): WatchEventWithRepo {
  return WatchEventWithRepoToJSONTyped(json, false);
}

export function WatchEventWithRepoToJSONTyped(
  value?: WatchEventWithRepo | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    createdAt: value["createdAt"],
    repoDescription: value["repoDescription"],
    repoOwnerAvatarUrl: value["repoOwnerAvatarUrl"],
    repoName: value["repoName"],
    repoOpenIssues: value["repoOpenIssues"],
    repoForks: value["repoForks"],
    repoOwnerType: value["repoOwnerType"],
    repoWatchers: value["repoWatchers"],
    repoUrl: value["repoUrl"],
    repoLanguage: value["repoLanguage"],
    repoOwnerUrl: value["repoOwnerUrl"],
    repoOwnerId: value["repoOwnerId"],
    repoOrgUrl: value["repoOrgUrl"],
    actorId: value["actorId"],
    actorAvatarUrl: value["actorAvatarUrl"],
    actorUrl: value["actorUrl"],
    repoId: value["repoId"],
    actorLogin: value["actorLogin"],
    repoTopics: value["repoTopics"],
    repoOwnerLogin: value["repoOwnerLogin"],
    repoStars: value["repoStars"],
    repoCreatedAt: value["repoCreatedAt"],
    repoOrgId: value["repoOrgId"],
    repoOrgLogin: value["repoOrgLogin"],
    repoHomepage: value["repoHomepage"],
    eventId: value["eventId"],
  };
}
