{
  "dockerfile": "FROM ubuntu:22.04\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    wget \\\n    git \\\n    build-essential \\\n    pkg-config \\\n    libssl-dev \\\n    libsqlite3-dev \\\n    libpq-dev \\\n    unzip \\\n    zip \\\n    ca-certificates \\\n    gnupg \\\n    lsb-release \\\n    python3-dev \\\n    python3-pip \\\n    python3-venv \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Node.js 20.x\nRUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \\\n    && apt-get install -y nodejs\n\n# Install pnpm\nRUN npm install -g pnpm@9.9.0\n\n# Install Rust toolchain\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \\\n    && echo 'source $HOME/.cargo/env' >> ~/.bashrc\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\n# Install Python 3.12 (Ubuntu 22.04 comes with Python 3.10, we need 3.12)\nRUN apt-get update && apt-get install -y software-properties-common \\\n    && add-apt-repository ppa:deadsnakes/ppa -y \\\n    && apt-get update \\\n    && apt-get install -y python3.12 python3.12-dev python3.12-venv python3.12-distutils \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Make python3.12 the default python3\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1\n\n# Install pip for Python 3.12\nRUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12\n\n# Install additional Python packages needed for development\nRUN pip install --break-system-packages virtualenv setuptools wheel\n\n# Install Protocol Buffers compiler (version 24.4 to match CI)\nRUN PROTOC_VERSION=24.4 \\\n    && PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip \\\n    && curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP \\\n    && unzip -o $PROTOC_ZIP -d /usr/local bin/protoc \\\n    && unzip -o $PROTOC_ZIP -d /usr/local 'include/*' \\\n    && rm -f $PROTOC_ZIP \\\n    && chmod +x /usr/local/bin/protoc\n\n# Install maturin for Python-Rust bindings\nRUN pip install maturin==1.8.1\n\n# Verify installations\nRUN node --version \\\n    && npm --version \\\n    && pnpm --version \\\n    && rustc --version \\\n    && cargo --version \\\n    && python3 --version \\\n    && pip --version \\\n    && protoc --version",
  "install": "pnpm install --frozen-lockfile",
  "start": "echo 'Environment setup complete. Ready for development!'",
  "terminals": []
}
