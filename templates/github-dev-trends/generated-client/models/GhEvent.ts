/* tslint:disable */
/* eslint-disable */
/**
 * ts API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface GhEvent
 */
export interface GhEvent {
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  repoUrl: string;
  /**
   *
   * @type {number}
   * @memberof GhEvent
   */
  actorId: number;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  eventId: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  actorLogin: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  actorUrl: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  eventType: string;
  /**
   *
   * @type {number}
   * @memberof GhEvent
   */
  repoId: number;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  createdAt: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  repoOwner: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  repoName: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  repoFullName: string;
  /**
   *
   * @type {string}
   * @memberof GhEvent
   */
  actorAvatarUrl: string;
}

/**
 * Check if a given object implements the GhEvent interface.
 */
export function instanceOfGhEvent(value: object): value is GhEvent {
  if (!("repoUrl" in value) || value["repoUrl"] === undefined) return false;
  if (!("actorId" in value) || value["actorId"] === undefined) return false;
  if (!("eventId" in value) || value["eventId"] === undefined) return false;
  if (!("actorLogin" in value) || value["actorLogin"] === undefined)
    return false;
  if (!("actorUrl" in value) || value["actorUrl"] === undefined) return false;
  if (!("eventType" in value) || value["eventType"] === undefined) return false;
  if (!("repoId" in value) || value["repoId"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("repoOwner" in value) || value["repoOwner"] === undefined) return false;
  if (!("repoName" in value) || value["repoName"] === undefined) return false;
  if (!("repoFullName" in value) || value["repoFullName"] === undefined)
    return false;
  if (!("actorAvatarUrl" in value) || value["actorAvatarUrl"] === undefined)
    return false;
  return true;
}

export function GhEventFromJSON(json: any): GhEvent {
  return GhEventFromJSONTyped(json, false);
}

export function GhEventFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GhEvent {
  if (json == null) {
    return json;
  }
  return {
    repoUrl: json["repoUrl"],
    actorId: json["actorId"],
    eventId: json["eventId"],
    actorLogin: json["actorLogin"],
    actorUrl: json["actorUrl"],
    eventType: json["eventType"],
    repoId: json["repoId"],
    createdAt: json["createdAt"],
    repoOwner: json["repoOwner"],
    repoName: json["repoName"],
    repoFullName: json["repoFullName"],
    actorAvatarUrl: json["actorAvatarUrl"],
  };
}

export function GhEventToJSON(json: any): GhEvent {
  return GhEventToJSONTyped(json, false);
}

export function GhEventToJSONTyped(
  value?: GhEvent | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    repoUrl: value["repoUrl"],
    actorId: value["actorId"],
    eventId: value["eventId"],
    actorLogin: value["actorLogin"],
    actorUrl: value["actorUrl"],
    eventType: value["eventType"],
    repoId: value["repoId"],
    createdAt: value["createdAt"],
    repoOwner: value["repoOwner"],
    repoName: value["repoName"],
    repoFullName: value["repoFullName"],
    actorAvatarUrl: value["actorAvatarUrl"],
  };
}
