name: Test Framework CLI

on:
  push:
    branches:
      - "**"
      - "!main"
    paths:
      - ".github/workflows/test-framework-cli.yaml"
      - "apps/framework-cli-e2e/**"
      - "apps/framework-cli/**"
      - "packages/**"

defaults:
  run:
    working-directory: ./apps/framework-cli

jobs:
  check:
    name: Check
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc (Needed for Temporal)
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "23.x"

      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ./apps/framework-cli/Cargo.toml

      - name: Run cargo Build in release mode
        run: cargo build --release --locked

  test-macos:
    name: Test Suite (MacOS)
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      RUST_BACKTRACE: full
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - name: Install Protoc (Needed for Temporal)
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "23.x"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Run Tests
        run: cargo test
        env:
          MOOSE_TELEMETRY_ENABLED: false

      - name: Inspect Logs
        if: always()
        run: |
          cat ~/.moose/*-cli.log

  test-ubuntu:
    name: Test Suite (Ubuntu)
    runs-on: ubuntu-4
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      RUST_BACKTRACE: full
    strategy:
      fail-fast: false
    steps:
      - name: Install Protoc (Needed for Temporal)
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "23.x"

      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Run Tests
        run: cargo test
        env:
          MOOSE_TELEMETRY_ENABLED: false

      - name: Run e2e Tests
        run: pnpm install --frozen-lockfile && pnpm --filter=framework-cli-e2e run test
        env:
          MOOSE_TELEMETRY_ENABLED: false

      - name: Inspect Logs
        if: always()
        run: |
          cat ~/.moose/*-cli.log

  lints:
    name: Lints
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc (Needed for Temporal)
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "23.x"

      - name: Checkout sources
        uses: actions/checkout@v2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      # to trigger code gen
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path ./apps/framework-cli/Cargo.toml --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./apps/framework-cli/Cargo.toml -- -D warnings
