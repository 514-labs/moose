# This file was auto-generated by the framework. You can add data models or change the existing ones

from moose_lib import Key, IngestPipeline, IngestPipelineConfig, StringToEnumMixin
from datetime import datetime, date
from typing import Optional, Annotated, Any
from pydantic import BaseModel, BeforeValidator
from enum import IntEnum, auto



class Baz(StringToEnumMixin, IntEnum):
    QUX = auto()
    QUUX = auto()


def lookup_value[T](value, cls: type[T]) -> Any:
    if isinstance(value, str):
        return cls[value]
    else:
        return value


class Foo(BaseModel):
    primary_key: Key[str]
    timestamp: float
    baz: Baz
    optional_text: Optional[str]
    date_only: Optional[str]  # Date in YYYY-MM-DD format


class Bar(BaseModel):
    primary_key: Key[str]
    utc_timestamp: datetime
    baz: Baz
    has_text: bool
    text_length: int
    process_date: date  # Date without time component (stored as Date in ClickHouse)


fooModel = IngestPipeline[Foo]("Foo", IngestPipelineConfig(
    ingest=True,
    stream=True,
    table=False
))

barModel = IngestPipeline[Bar]("Bar", IngestPipelineConfig(
    ingest=False,
    stream=True,
    table=True
))
